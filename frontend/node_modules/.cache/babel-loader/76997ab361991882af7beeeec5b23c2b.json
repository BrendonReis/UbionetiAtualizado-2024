{"ast":null,"code":"import React,{useState,useRef,useEffect,useContext}from\"react\";import{useHistory}from\"react-router-dom\";import{format}from\"date-fns\";import{SocketContext}from\"../../context/Socket/SocketContext\";import useSound from\"use-sound\";import Popover from\"@material-ui/core/Popover\";import IconButton from\"@material-ui/core/IconButton\";import List from\"@material-ui/core/List\";import ListItem from\"@material-ui/core/ListItem\";import ListItemText from\"@material-ui/core/ListItemText\";import{makeStyles}from\"@material-ui/core/styles\";import Badge from\"@material-ui/core/Badge\";import ChatIcon from\"@material-ui/icons/Chat\";import TicketListItem from\"../TicketListItemCustom\";import useTickets from\"../../hooks/useTickets\";import alertSound from\"../../assets/sound.mp3\";import{AuthContext}from\"../../context/Auth/AuthContext\";import{i18n}from\"../../translate/i18n\";import toastError from\"../../errors/toastError\";const useStyles=makeStyles(theme=>({tabContainer:{overflowY:\"auto\",maxHeight:350,...theme.scrollbarStyles},popoverPaper:{width:\"100%\",maxWidth:350,marginLeft:theme.spacing(2),marginRight:theme.spacing(1),[theme.breakpoints.down(\"sm\")]:{maxWidth:270}},noShadow:{boxShadow:\"none !important\"}}));const NotificationsPopOver=volume=>{const classes=useStyles();const history=useHistory();const{user}=useContext(AuthContext);const ticketIdUrl=+history.location.pathname.split(\"/\")[2];const ticketIdRef=useRef(ticketIdUrl);const anchorEl=useRef();const[isOpen,setIsOpen]=useState(false);const[notifications,setNotifications]=useState(()=>{const savedNotifications=localStorage.getItem(\"notifications\");return savedNotifications?JSON.parse(savedNotifications):[];});const[showPendingTickets,setShowPendingTickets]=useState(false);const{tickets}=useTickets({withUnreadMessages:\"true\"});const[play]=useSound(alertSound,volume);const soundAlertRef=useRef();const historyRef=useRef(history);const socketManager=useContext(SocketContext);useEffect(()=>{const fetchSettings=async()=>{try{if(user.allTicket===\"enable\"){setShowPendingTickets(true);}}catch(err){toastError(err);}};fetchSettings();},[]);useEffect(()=>{soundAlertRef.current=play;if(!(\"Notification\"in window)){console.log(\"Este navegador não suporta notificações\");}else{Notification.requestPermission();}},[play]);useEffect(()=>{const processNotifications=()=>{if(showPendingTickets){setNotifications(tickets);}else{const newNotifications=tickets.filter(ticket=>ticket.status!==\"pending\");setNotifications(newNotifications);}};processNotifications();},[tickets]);useEffect(()=>{ticketIdRef.current=ticketIdUrl;},[ticketIdUrl]);useEffect(()=>{const socket=socketManager.getSocket(user.companyId);socket.on(\"ready\",()=>socket.emit(\"joinNotification\"));socket.on(\"company-\".concat(user.companyId,\"-notification\"),data=>{console.log(\"Notificação recebida:\",data);if(data.action===\"pendingTicket\"){handleNotifications(data);}});socket.on(\"company-\".concat(user.companyId,\"-ticket\"),data=>{if(data.action===\"updateUnread\"||data.action===\"delete\"){setNotifications(prevState=>{const ticketIndex=prevState.findIndex(t=>t.id===data.ticketId);if(ticketIndex!==-1){prevState.splice(ticketIndex,1);return[...prevState];}return prevState;});}});socket.on(\"company-\".concat(user.companyId,\"-appMessage\"),data=>{if(data.action===\"pendingTicket\"){const ticket=data.ticket;console.log(\"Renderizando ticket:\",ticket);// Tente obter o contato a partir do localStorage\nconst contact=localStorage.getItem(\"contact_\".concat(ticket.id));let contactObj=null;if(contact){contactObj=JSON.parse(contact);console.log(\"Contato encontrado:\",contactObj);}else{console.warn(\"Contato não encontrado para o ticket:\",ticket.id);}// Crie a notificação se o contato existir\nif(contactObj){const notificationTitle=\"\".concat(i18n.t(\"tickets.notification.message\"),\" \").concat(contactObj.name||'Usuário Desconhecido');const options={body:\"\".concat(data.message,\" - \").concat(format(new Date(),\"HH:mm\")),icon:contactObj.profilePicUrl||'default_icon_url.png',tag:ticket.id,renotify:true};new Notification(notificationTitle,options);}}});return()=>{socket.disconnect();};},[user,showPendingTickets,socketManager]);const handleNotifications=data=>{console.log(\"Processando notificação:\",data);const{message,contact,ticket}=data;if(!ticket||!ticket.id)return;const existingNotificationIndex=notifications.findIndex(notif=>notif.id===ticket.id);if(existingNotificationIndex!==-1){const updatedNotifications=[...notifications];updatedNotifications[existingNotificationIndex]={...updatedNotifications[existingNotificationIndex],lastMessage:message.body,updatedAt:new Date()};setNotifications(updatedNotifications);localStorage.setItem(\"notifications\",JSON.stringify(updatedNotifications));console.log(\"Notifica\\xE7\\xE3o atualizada para o ticket \".concat(ticket.id,\":\"),updatedNotifications[existingNotificationIndex]);}else{const newNotification={...ticket,lastMessage:message.body,updatedAt:new Date()};const updatedNotifications=[...notifications,newNotification];setNotifications(updatedNotifications);localStorage.setItem(\"notifications\",JSON.stringify(updatedNotifications));console.log(\"Notificação adicionada:\",newNotification);}const options={body:\"\".concat(message.body,\" - \").concat(format(new Date(),\"HH:mm\")),icon:(contact===null||contact===void 0?void 0:contact.profilePicUrl)||'default_icon_url.png',tag:ticket.id,renotify:true};const notification=new Notification(\"\".concat(i18n.t(\"tickets.notification.message\"),\" \").concat((contact===null||contact===void 0?void 0:contact.name)||'Usuário'),options);notification.onclick=e=>{e.preventDefault();window.focus();historyRef.current.push(\"/tickets/\".concat(ticket.uuid));};soundAlertRef.current();};const handleClick=()=>{setIsOpen(prevState=>!prevState);console.log(\"Popover de notificações:\",!isOpen);// Log para verificar a abertura do popover\n};const handleClickAway=()=>{setIsOpen(false);};const NotificationTicket=_ref=>{let{children}=_ref;return/*#__PURE__*/React.createElement(\"div\",{onClick:handleClickAway},children);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(IconButton,{onClick:handleClick,ref:anchorEl,\"aria-label\":\"Open Notifications\",color:\"inherit\",style:{color:\"white\"}},/*#__PURE__*/React.createElement(Badge,{overlap:\"rectangular\",badgeContent:notifications.length,color:\"secondary\"},/*#__PURE__*/React.createElement(ChatIcon,null))),/*#__PURE__*/React.createElement(Popover,{disableScrollLock:true,open:isOpen,anchorEl:anchorEl.current,anchorOrigin:{vertical:\"bottom\",horizontal:\"right\"},transformOrigin:{vertical:\"top\",horizontal:\"right\"},classes:{paper:classes.popoverPaper},onClose:handleClickAway},/*#__PURE__*/React.createElement(List,{dense:true,className:classes.tabContainer},notifications.length===0?/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(ListItemText,{primary:i18n.t(\"notifications.noTickets\")})):notifications.map(ticket=>{console.log(\"Renderizando ticket:\",ticket);// Log para verificar os tickets sendo renderizados\nreturn/*#__PURE__*/React.createElement(NotificationTicket,{key:ticket.id},/*#__PURE__*/React.createElement(TicketListItem,{ticket:ticket}));}))));};export default NotificationsPopOver;","map":null,"metadata":{},"sourceType":"module"}